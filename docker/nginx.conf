upstream api_gateway_upstream {
    server api-gateway:8000;
}

upstream ai_service_upstream {
    server ai-service:8001;
}

upstream workflow_service_upstream {
    server workflow-service:8002;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name localhost;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # API Gateway
    location /api/ {
        proxy_pass http://api_gateway_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # AI Service
    location /ai/ {
        proxy_pass http://ai_service_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # Workflow Service
    location /workflow/ {
        proxy_pass http://workflow_service_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # Health check endpoints
    location /health/api-gateway {
        proxy_pass http://api_gateway_upstream/health;
        access_log off;
    }

    location /health/ai-service {
        proxy_pass http://ai_service_upstream/health;
        access_log off;
    }

    location /health/workflow-service {
        proxy_pass http://workflow_service_upstream/health;
        access_log off;
    }

    # Overall health check
    location /health {
        access_log off;
        return 200 '{
  "status": "healthy",
  "timestamp": "$time_iso8601",
  "services": {
    "api-gateway": "http://localhost/health/api-gateway",
    "ai-service": "http://localhost/health/ai-service",
    "workflow-service": "http://localhost/health/workflow-service"
  }
}';
        add_header Content-Type application/json;
    }

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
}

# Development server (HTTP only)
server {
    listen 80 default_server;
    server_name dev.localhost;

    # API Gateway
    location /api/ {
        proxy_pass http://api_gateway_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # AI Service
    location /ai/ {
        proxy_pass http://ai_service_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Workflow Service
    location /workflow/ {
        proxy_pass http://workflow_service_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
